
#RSM 7/27/2022-6pm 2nd update (still observing) get other idea from a member of fb python phil
#i coated my main object with class object and get an inherit from QWidget
#debuger ko ung L1 to up na numbers sa print
#i update all the simple block that wrong user input

#reference of error ko
#https://stackoverflow.com/questions/17914960/pyqt-runtimeerror-wrapped-c-c-object-has-been-deleted

#reference of QWidget
#  https://doc.qt.io/qtforpython-5/PySide2/QtWidgets/QWidget.html#PySide2.QtWidgets.PySide2.QtWidgets.QWidget.parentWidget

from PyQt5.QtWidgets import *
import threading
import time
import sys

class wind(QWidget):#1

      def __init__(self, parent= None):#2
            
            #L110
            QWidget.__init__(self, parent)
            self.setWindowTitle("A multi thread test")
          
            self.top = 100
            self.left = 100
            self.width = 400
            self.heigth = 300
            self.setGeometry(self.top, self.left, self.width, self.heigth )
            self.setFixedSize(self.width, self.heigth)
            self.labe_1 = QLabel(self, text = "hindi pa na simulan 0")
            self.labe_1.resize(200,30)
            self.labe_1.move(10, 1)
            item_prin.append(self.labe_1)

            self.labe_2 = QLabel(self, text = "hindi pa na simulan 1")
            self.labe_2.resize(200,30)
            self.labe_2.move(10, 50)
            item_prin.append(self.labe_2)

            self.labe_3 = QLabel(self, text = "hindi pa na simulan 2")
            self.labe_3.resize(200,30)
            self.labe_3.move(10, 100)
            item_prin.append(self.labe_3)


            butt_1 = QPushButton(self, text ="press to triger thread")
            butt_1.resize(200, 30)
            butt_1.move(10, 150)


            butt_2 = QPushButton(self, text ="stop all thread and exit")
            butt_2.resize(200, 30)
            butt_2.move(10, 200)
            
            butt_3 = QPushButton(self, text ="exit")
            butt_3.resize(200, 30)
            butt_3.move(10, 250)

            butt_1.clicked.connect(self.butt_1_click)

            butt_2.clicked.connect(self.butt_2_click)

            butt_3.clicked.connect(self.butt_3_click)

      #2

      #insert object apps to control on exiting wind obje
      def inse_apps(self, p): #1

            #L120
            self.apps = p
      #1
       
      #start the active thread
      def butt_1_click(self): #1         
            global glo_calle

            #L10
            _text, ok_press = QInputDialog.getText(self, "Get text for start","maginput ka ng index 0,1,2\nna call na func \nnag crash pag umilit ung na call:", QLineEdit.Normal, "")

            if not ok_press :#2
                  
                  #nag canceled ung user
                  print(f"L11 nag canceled user\n")
                  return 
            #2

            #n = int(_text)

            n = self.numb_fail(_text)

            print(f"L12 n {n} \n")

            if  n >=0 and n <=2 : #2
                  
                  if self.calle_func(n): #3
                        print("L13 already called\n")
                        return 
                  #3

                  print(f"L14 \n")
                 
                  #open ang index 0 to 2 para sa tuloy_event
                  #glo_calle array of flag pang trace kung nabuksan na ang isang index function
            
                  #call thread indvidual here
                  thre_arr[n] = threading.Thread(target = self.tuloy_event, args = (n, ) , daemon = True )
                  
                  glo_break[n] = False
                  glo_calle[n] = True
                  thre_arr[ n].start()
                
                  QMessageBox.information(self, "Message", f" ang na icall na thread_func ay {_text} ")
                  
                  return
            #2      

            print(f"L15 hindi valid ung func number {n}\n")
            
      #1

      #stop thread
      def butt_2_click(self): #1
            global glo_calle

            #L90 
            if self.selec_all_stop(): #2
                  #stop all       
         
                  if not self.close_all_threa(True, _end = False) :#4

                        print(f"L92 \n")
                        return
                  #4

                  print(f"L93  sucess\n")
                  return 
            #2

            _text, ok_press = QInputDialog.getText(self, "Get text for stop", \
            "maginput ka ng index 0,1,2\npara i-stop ung thread", QLineEdit.Normal, "")    
            
            print(f"L93b _text {_text}, ok_press {ok_press}\n")

            if not ok_press: #3

                  print(f"L93c nag canceled ang user\n")
                  return 
            #3
 
            n = self.numb_fail(_text)

           
            #what number
            if n < 0 and  n > 2:#3

                  QMessageBox.information(self, "Message", f"mali ang |{_text}| na inimput mo")
                  print(f"L94  mali input\n")
                  return 
            #3
            
            if not self.close_all_threa(False, n): #4
                  print(f"L94b wrong input by user \n")
                  return
            #4
            
            print(f"L95 sucess \n")
         
      #1

      #close_program on button exit 
      def butt_3_click(self): #1
            
            #L80
            if not self.Messa_clos() : #3
                  
                  print(f"L81 hindi tinuloy na iclose ng user\n")
                  return            
            #3

            #set sa close all thread lahat
            self.close_all_threa(True, _end = True)  
            self.destroy()       
            self.apps.quit()
          
      #1

      #select all to stop Message box
      def selec_all_stop(self):#1

            #L100
            _retur = QMessageBox.information(self, "Message", "Stop all ba ang lahat ng thread\nPag oo Yes\nPag individual No", \
            QMessageBox.Yes | QMessageBox.No, QMessageBox.Yes)          

            if _retur == QMessageBox.Yes: #2
                  return True
            #2

            print(f"L103 nag bago isip user canceled stop\n")
            return False
      #1


      #called by system close
      def closeEvent(self, event): #1
           
            if not self.Messa_clos() : #3
                  
                  print(f"L62 user ignore  \n")
                  event.ignore()
                  return            
            #3


            self.close_all_threa(True, _end = True)
            event.accept()
            print("L63 \n")

           
      #1

      #process called function 
      def calle_func(self, p):#1
            global glo_calle
                        
            if glo_calle[p]: #2
                  return True
            #2

            return False
      #1

      #number fail process for error input numbers
      def numb_fail(self, p): #1

            try : #2

                  p = int(p)
                  return p

            except: #2
                  return -1
            #2

      #1

      def tuloy_event(self, para): #2
           
            global glo_break

            print(f"L20 ")

            ind = para

            count =0
            while True: #3

                  i =0
                  while i< 1000000:#2
                     
                        #loop to delay in sec
                        i+=1
                  #2

                  #print(f"L21 glo_break { glo_break}, name {name}\n")

                  #glo_break ay maging True sa 
                  if glo_break[ind]: #4

                        print(f"L22 \n")                                                                       
                        break
                  #4

                  item_prin[ind].setText(f"func {ind},  count {count+1} ")
                  count +=1

            #3

      #2

      #message of closing
      def Messa_clos(self):#1

            #L70
            retu = QMessageBox.information( self, "Message", "sigurado kong e-exit na Y/ N", QMessageBox.Yes  | QMessageBox.No, QMessageBox.Yes)

            if retu == QMessageBox.Yes: #2
                  return True
            #2

            return False
      #1

          
      #forc_clos  close_all_threa
      def close_all_threa(self, force_close, _indiv = 0, _end = True ):#1
            global glo_break
            #L50

            #force close it process
            if force_close : #3
           
                  #pwersahin na isara ang tuloy_event()
                  for i in range(0, len(glo_break)) : #2
                        glo_break[i] = True
                  #2

                  i = 0       
            
                  while i < 3: #4

                        print(f"L52 i {i}, glo_calle {glo_calle} \n")
                       
                        #glo_calle malalaman dito kung sino ung active na tuloy_event index
                        # ang index ay 0 to 2
                        if glo_calle[i] :#5

                              glo_calle[i] = False
                              thre_arr[i].join()
                             
                              print(f"L53 \n")
                               
                        #5     
            
                        i +=1 
                  #4

                  if _end : #5 
                        item_prin.clear()
                        thre_arr.clear()
                        glo_calle.clear()
                        print(f"L55 all object deleted\n")
                        return True
                  #5

                  for i in range(0, len(item_prin) ): #4

                        item_prin[i].setText(f"hindi pa na simulan {i}") 
                  #4

                  print(f"L55b not delete any list\n")
                  return True

            #3
                  
            print(f"L56 _indiv {_indiv}, glo_calle {glo_calle}\n")

            #individual close process
            if (_indiv <= -1 or _indiv > 2 ) or not glo_calle[_indiv] :#5

                  print(f"L57 error: index input\n")
                  return False
            #5                 
            
            glo_break[_indiv] = True
            glo_calle[_indiv] = False
            thre_arr[_indiv].join()

            item_prin[_indiv].setText( f"hindi pa na simulan {_indiv}" )

            print(f"L58 \n")
            return True
      #1


#1

#global variables
glo_break = list([False, False, False])

item_prin = list([])
thre_arr = list( [None, None, None] )
glo_calle= list([False, False, False])

apps = QApplication(sys.argv)

obje_wind = wind()

#input apps para macontrol ung terminate sa loob ng class wind
obje_wind.inse_apps(apps)

obje_wind.show()

apps.exec()

print("L30 before exit()")
sys.exit()




